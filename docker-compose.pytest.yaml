version: '3.4'

services:
  postgres:
    # db with some data from ls8_usgs_level1_scene pre-indexed
    build: docker/database/
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USERNAME}
    network_mode: bridge
    ports:
      - "${DB_PORT}:5432"
    restart: always
  ows:
    image: 
      opendatacube/ows:_builder
    network_mode: bridge
    links:
      - postgres:postgres
    environment:
      # Defaults are defined in .env file
      DB_HOSTNAME: ${DB_HOSTNAME}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      # Where the config file is (must match the volume mount)
      WMS_CONFIG_PATH: /env/config/ows_cfg.py
      # Path from the PYTHONPATH to the config object (default PYTHONPATH is /env) 
      DATACUBE_OWS_CFG: config.ows_cfg.ows_cfg
      AWS_DEFAULT_REGION: ${AWS_REGION}
      # Talk to AWS without using credentials
      AWS_NO_SIGN_REQUEST: "${AWS_NO_SIGN_REQUEST}"
      # Dev flags
      FLASK_APP: /code/datacube_ows/ogc.py
      FLASK_ENV: ${FLASK_ENV}
      PYDEV_DEBUG: "${PYDEV_DEBUG}"
    ports:
      - "8000:8000"
    volumes:
      - ${OWS_CFG_FILE}:/env/config/ows_cfg.py
      - ./docker/ows/wait-for-db:/usr/local/bin/wait-for-db
      - ./:/code/
      - ./artifacts:/mnt/artifacts
    restart: always
    command: ["wait-for-db", "flask", "run", "--host=0.0.0.0", "--port=8000"]
