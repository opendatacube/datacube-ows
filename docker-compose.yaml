version: '3.4'

services:
  postgres:
    # db with some data from ls8_usgs_level1_scene pre-indexed
    build: docker/database/
    environment:
      - POSTGRES_DB=opendatacube
      - POSTGRES_PASSWORD=opendatacubepassword
      - POSTGRES_USER=opendatacube
    ports:
      - 5432:5432
    restart: always
  
  ows:
    build:
      context: .
      cache_from: 
        - opendatacube/ows:latest
      # End dev config
    image: opendatacube/ows:latest
    environment:
      - DB_HOSTNAME=postgres
      - DB_PORT=5432
      - DB_USERNAME=opendatacube
      - DB_PASSWORD=opendatacubepassword
      - DB_DATABASE=opendatacube
      # Where the config file is (must match the volume mount)
      - WMS_CONFIG_PATH=/env/config/ows_cfg.py
      # Path from the PYTHONPATH to the config object (default PYTHONPATH is /env) 
      - DATACUBE_OWS_CFG=config.ows_cfg.ows_cfg
      - AWS_DEFAULT_REGION=ap-southeast-2
      # Talk to AWS without using credentials
      - AWS_NO_SIGN_REQUEST=YES
      - FLASK_APP=/code/datacube_ows/ogc.py
    ports:
      - "8000:8000"
    volumes:
      - ./ows_test_cfg.py:/env/config/ows_cfg.py
      - ./docker/ows/wait-for-db:/usr/local/bin/wait-for-db
    depends_on:
      - "postgres"
    restart: always
    # Because docker-compose doesn't have init containers we have a wait script
    # That will keep trying till the database is up
    command:
      - "wait-for-db"
      - "gunicorn"
      - "-b"
      - "0.0.0.0:8000"
      - "-w"
      - "3"
      - "--threads=3"
      - "-k"
      - "gevent"
      - "--timeout"
      - "121"
      - "--pid"
      - "gunicorn.pid"
      - "--log-level"
      - "info"
      - "--worker-tmp-dir"
      - "/dev/shm"
      - "datacube_ows.wsgi"
